[{"/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/index.js":"1","/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/App.js":"2","/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/pages/Login.js":"3","/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/utils/mutations.js":"4","/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/utils/auth.js":"5"},{"size":178,"mtime":1628346455567,"results":"6","hashOfConfig":"7"},{"size":1426,"mtime":1628355849025,"results":"8","hashOfConfig":"7"},{"size":2502,"mtime":1628347081416,"results":"9","hashOfConfig":"7"},{"size":501,"mtime":1628350290299,"results":"10","hashOfConfig":"7"},{"size":1043,"mtime":1628350290299,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c2ge3p",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/index.js",[],"/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/App.js",["23"],"import React from 'react';\nimport { setContext } from '@apollo/client/link/context'\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// import Home from './pages/Home';\n// import Signup from './pages/Signup';\nimport Login from './pages/Login';\n\n\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n  });\n  \n  // Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('id_token');\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : '',\n      },\n    };\n  });\n\n  const client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  });\n\n  function App() {\n      return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div className=\"flex-column justify-flex-start min-100-vh\">\n                    <Login />\n                </div>\n            </Router>\n        </ApolloProvider>\n      )\n  }\n\n  export default App;","/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/pages/Login.js",[],"/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/utils/mutations.js",[],"/Users/steve/HOMEWORK/project-3/DnD-Character-Builder/client/src/utils/auth.js",[],{"ruleId":"24","severity":1,"message":"25","line":4,"column":35,"nodeType":"26","messageId":"27","endLine":4,"endColumn":40},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar"]