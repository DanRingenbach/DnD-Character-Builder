
[{"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\index.js":"1","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\App.js":"2","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Home.js":"3","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Profile.js":"4","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Signup.js":"5","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Login.js":"6","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\Header\\index.js":"7","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\auth.js":"8","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharacterList\\homeChar.js":"9","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\mutations.js":"10","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\queries.js":"11","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharacterList\\Characters.js":"12","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\CreateChar.js":"13","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharForm.js":"14","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\diceComponent.js":"15"},{"size":188,"mtime":1628346972348,"results":"16","hashOfConfig":"17"},{"size":2585,"mtime":1629056569870,"results":"18","hashOfConfig":"17"},{"size":1303,"mtime":1629056717717,"results":"19","hashOfConfig":"17"},{"size":1429,"mtime":1628784201772,"results":"20","hashOfConfig":"17"},{"size":2989,"mtime":1628730690572,"results":"21","hashOfConfig":"17"},{"size":2816,"mtime":1628730690567,"results":"22","hashOfConfig":"17"},{"size":1735,"mtime":1628956922012,"results":"23","hashOfConfig":"17"},{"size":1071,"mtime":1629052701211,"results":"24","hashOfConfig":"17"},{"size":838,"mtime":1629055219746,"results":"25","hashOfConfig":"17"},{"size":1497,"mtime":1629051562171,"results":"26","hashOfConfig":"17"},{"size":863,"mtime":1629128083064,"results":"27","hashOfConfig":"17"},{"size":3368,"mtime":1629128699985,"results":"28","hashOfConfig":"17"},{"size":270,"mtime":1629128214075,"results":"29","hashOfConfig":"17"},{"size":9083,"mtime":1629128083052,"results":"30","hashOfConfig":"17"},{"size":948,"mtime":1629128083057,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1b62p5t",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\index.js",[],["69","70"],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\App.js",["71"],"import React from 'react';\r\nimport { setContext } from '@apollo/client/link/context'\r\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import Home from './pages/Home';\r\n// import Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Profile from './pages/Profile';\r\nimport CreateChar from './pages/CreateChar';\r\n// import diceComponent from './components/diceComponent'\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n  });\r\n  \r\n  // Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n    // get the authentication token from local storage if it exists\r\n    const token = localStorage.getItem('id_token');\r\n    // return the headers to the context so httpLink can read them\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : '',\r\n      },\r\n    };\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n    uri:\"/graphql\"\r\n  });\r\n\r\n  function App() {\r\n      return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    <Header />\r\n                    <div style={{maxWidth: \"fit-content\", margin: \"0 auto\", minWidth: \"170px\"}}>\r\n                      <Route exact path=\"/\">\r\n                        <Home />\r\n                      </Route>\r\n                      <Route exact path=\"/login\">\r\n                        <Login />\r\n                      </Route>\r\n                      <Route exact path=\"/signup\">\r\n                        <Signup />\r\n                      </Route>\r\n                      <Route exact path=\"/profile\">\r\n                        <Profile />\r\n                      </Route>\r\n                    </div>\r\n                      <Route exact path=\"/CreateChar\">\r\n                        <CreateChar />\r\n                        {/* <diceComponent /> */}\r\n                      </Route>\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n      )\r\n  }\r\n\r\n  export default App;","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Home.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Profile.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Signup.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Login.js",["72","73","74"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst Login = () => {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n  console.log(data);\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n      console.log(data.login.token);\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n        <div className=\"card-body\">\r\n          {data ? (\r\n            <p>\r\n              Success! You may now head{' '}\r\n              <Link to=\"/\">back to the homepage.</Link>\r\n            </p>\r\n          ) : (\r\n            <form onSubmit={handleFormSubmit}>\r\n              <input style={{marginRight: \"10px\"}}\r\n                className=\"form-input\"\r\n                placeholder=\"Your email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n              />\r\n              <input style={{marginRight: \"10px\"}}\r\n                className=\"form-input\"\r\n                placeholder=\"******\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n              <button\r\n                className=\"btn btn-block btn-primary\"\r\n                style={{ cursor: 'pointer' }}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"my-3 p-3 bg-danger text-white\">\r\n              {error.message}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\auth.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharacterList\\homeChar.js",["75","76"],"import React from 'react';\r\nimport { Card, ListGroupItem, ListGroup, Col, Row } from 'react-bootstrap';\r\n\r\n\r\nconst homeChar = ({ characters }) => {\r\n    if (!characters.length) {\r\n      return <h3>No characters yet</h3>;\r\n  \r\n    }\r\n    console.log()\r\n    return (\r\n      <div id=\"characterCards\">\r\n        <Row>\r\n          {characters &&\r\n            characters.map((character) => (\r\n              <Col style={{marginBottom: \"20px\"}}>\r\n                <Card style={{ width: \"200px\" }} id=\"cardBody\">\r\n                  <Card.Img variant=\"top\" src={character.image} />\r\n                  <Card.Body>\r\n                    <Card.Title>{character.name}</Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  \r\n  export default homeChar;","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\mutations.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\queries.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharacterList\\Characters.js",["77"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  Col,\r\n  Row,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { DELETE_CHAR } from \"../../utils/mutations\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\n\r\nconst Character = ({ characters }) => {\r\n  const [removeChar] = useMutation(DELETE_CHAR);\r\n  const { loading, data } = useQuery(QUERY_ME);\r\n\r\n  const userData = data\r\n  console.log(userData)\r\n\r\n  const handleRemoveChar = async (characterId) => {\r\n\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    try {\r\n      await removeChar({\r\n        variables: { characterId },\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n    if (!characters.length) {\r\n      return <h3>No characters yet</h3>;\r\n    }\r\n    console.log();\r\n    \r\n    return (\r\n      <div id=\"characterCards\">\r\n        <Row>\r\n          {characters &&\r\n            characters.map((character) => (\r\n              <Col style={{ marginBottom: \"20px\" }}>\r\n                <Card style={{ width: '200px' }} >\r\n                  <Card.Img variant=\"top\" src={character.image} />\r\n                  <Card.Body>\r\n                    <Card.Title>Level: {character.level} {character.name}</Card.Title>\r\n                    <Card.Text>\r\n                      {character.background}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem>Race: {character.race}</ListGroupItem>\r\n                    <ListGroupItem>Class: {character.class} </ListGroupItem>\r\n                    <ListGroupItem>Weapon: {character.weapons} </ListGroupItem>\r\n                    <ListGroupItem>\r\n                      <ul style={{ padding: \"0px\", marginBottom: \"1px\" }}>\r\n                        Strength: {character.strength}\r\n                      </ul>\r\n                      <ul style={{ padding: \"0px\", marginBottom: \"1px\" }}>\r\n                        Dexterity: {character.dexterity}\r\n                      </ul>\r\n                      <ul style={{ padding: \"0px\", marginBottom: \"1px\" }}>\r\n                        Constitution: {character.constitution}\r\n                      </ul>\r\n                      <ul style={{ padding: \"0px\", marginBottom: \"1px\" }}>\r\n                        Intelligence: {character.intelligence}\r\n                      </ul>\r\n                      <ul style={{ padding: \"0px\", marginBottom: \"1px\" }}>\r\n                        Wisdom: {character.wisdom}\r\n                      </ul>\r\n                      <ul style={{ padding: \"0px\", marginBottom: \"1px\" }}>\r\n                        Charisma: {character.charisma}\r\n                      </ul>\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                  <Card.Body>\r\n                    <Button href=\"#\">Edit</Button>\r\n                    <Button\r\n                      href=\"#\"\r\n                      onClick={() => handleRemoveChar(character._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  export default Character;\r\n","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\CreateChar.js",["78"],"import React from 'react';\r\nimport CharForm from \"../components/CharForm\";\r\nimport DiceComponent from '../components/diceComponent';\r\n\r\n\r\nconst CreateChar = () => {\r\n\r\n    return (\r\n        <>\r\n        <CharForm />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CreateChar;\r\n","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharForm.js",["79"],"import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_CHAR } from \"../utils/mutations\";\r\n\r\nconst CharForm = () => {\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    race: \"\",\r\n    class: \"\",\r\n    strength: \"\",\r\n    dexterity: \"\",\r\n    constitution: \"\",\r\n    intelligence: \"\",\r\n    wisdom: \"\",\r\n    charisma: \"\",\r\n    background: \"\",\r\n    alignment: \"\",\r\n    weapons: \"\",\r\n  });\r\n  \r\n\r\n  const [addChar] = useMutation(ADD_CHAR);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    // On form submit, perform mutation and pass in form data object as arguments\r\n    // It is important that the object fields are match the defined parameters in `ADD_CHAR` mutation\r\n    try {\r\n      const { data } = addChar({\r\n        variables: { characterInput: formState },\r\n      });\r\n      // don't do this...\r\n      // window.location.reload();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleFormSubmit} id=\"charForm\">\r\n      <Form.Group className=\"mb-3\" controlId=\"charName\">\r\n        <Form.Label id=\"formTitle\">Enter Name</Form.Label>\r\n        <p id=\"text\">\r\n          Before choosing a name for your character take a second to think about\r\n          the kind of adventurer you want to play. You might be a courageous\r\n          fighter, a skulking rogue, a fervent cleric, or a flamboyant wizard.\r\n          Pick a name that will exemplify and amplify theindividual feature of\r\n          you fantastic persona.\r\n        </p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Name\"\r\n          name=\"name\"\r\n          value={formState.name}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charRace\">\r\n        <Form.Label id=\"formTitle\">Enter Race</Form.Label>\r\n        <p id=\"text\">\r\n          Every character belongs to a race, one of the many intelligent\r\n          humanoid species in the D&D world. The most common player character\r\n          races are dwarves, elves, halflings, and humans. The race you choose\r\n          contribute in an important way, by establishing a general appearance\r\n          and the natural talents gained from culture and ancestry.\r\n        </p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Race\"\r\n          name=\"race\"\r\n          value={formState.race}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charClass\">\r\n        <Form.Label id=\"formTitle\">Enter Class</Form.Label>\r\n        <p id=\"text\">\r\n          Every adventurer is a member of a class. Class broadly describes the\r\n          character's vocation, what special talents they possess, and the\r\n          tactics they are most likely to employ when exploring a dungeon,\r\n          fighting monsters, or engaging in tense negotiation.\r\n        </p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Class\"\r\n          name=\"class\"\r\n          value={formState.class}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charAbilities\">\r\n        <Form.Label id=\"formTitle\">Enter Ability Scores</Form.Label>\r\n        <p id=\"text\">\r\n          Much of what your character does in the game depends on their six\r\n          abilities. Each ability has a score, which is the number you will\r\n          record on your character form. You may use the roll dice feature of\r\n          this app to generate the six numbers you need to input into your\r\n          character sheet. You may switch around the numbers after filling it\r\n          out a first time. If you are uncomfortable with randomly generating\r\n          these scores you can use the following scores instead:\r\n          15,14,13,12,10,8\r\n        </p>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Strength Score\"\r\n          name=\"strength\"\r\n          value={formState.strength}\r\n          onChange={handleChange}\r\n        />\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Dexterity Score\"\r\n          name=\"dexterity\"\r\n          value={formState.dexterity}\r\n          onChange={handleChange}\r\n        />\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Constitution Score\"\r\n          name=\"constitution\"\r\n          value={formState.constitution}\r\n          onChange={handleChange}\r\n        />\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Intelligence Score\"\r\n          name=\"intelligence\"\r\n          value={formState.intelligence}\r\n          onChange={handleChange}\r\n        />\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Wisdom Score\"\r\n          name=\"wisdom\"\r\n          value={formState.wisdom}\r\n          onChange={handleChange}\r\n        />\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Charisma Score\"\r\n          name=\"charisma\"\r\n          value={formState.charisma}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charBackground\">\r\n        <Form.Label id=\"formTitle\">Enter Character Background</Form.Label>\r\n        <p id=\"text\">\r\n          Your character's background describes where they come from, their\r\n          original occupation, and your character's place in the D&D world. Talk\r\n          with your Dungeon Master while building your background and they will\r\n          be able to offer guidance. A background that fits within the campaign\r\n          is always a more enjoyable expirience for whole party.\r\n        </p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Background\"\r\n          value={formState.background}\r\n          name=\"background\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charAlignment\">\r\n        <Form.Label id=\"formTitle\">Enter Alignment</Form.Label>\r\n        <p id=\"text\">\r\n          A character's alignment is the moral compass that guides their\r\n          decisions throughout the game. Some examples of this are: Neutral\r\n          Good, Chaotic Evil, True Neutral.\r\n        </p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Alignment\"\r\n          name=\"alignment\"\r\n          value={formState.alignment}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charItems\">\r\n        <Form.Label id=\"formTitle\">Enter Items</Form.Label>\r\n        <p id=\"text\">\r\n          Your class and background will generally determine your equipment. The\r\n          Dungeon Master may also have some campaign specific items that you\r\n          will pick up at the beginning of the game. Fill this section in with\r\n          those items.\r\n        </p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Items\"\r\n          name=\"items\"\r\n          value={formState.items}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charWeapons\">\r\n        <Form.Label id=\"formTitle\">Enter Weapons</Form.Label>\r\n        <p id=\"text\">List the weapons that your character carries on them here.</p>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter Weapons\"\r\n          name=\"weapons\"\r\n          value={formState.weapons}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charHP\">\r\n        <Form.Label id=\"formTitle\">Enter HitPoints</Form.Label>\r\n        <p id=\"text\">\r\n          The hit points you have at the beginning of the game are dependant on\r\n          your class. Enter those hit points here. Don't worry about it being a\r\n          low number, you will gain hit points as you level up and become a\r\n          stronger player.\r\n        </p>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Enter HP\"\r\n          name=\"hitPoints\"\r\n          value={formState.hitPoints}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"charLevel\">\r\n        <Form.Label id=\"formTitle\">Enter Level</Form.Label>\r\n        <p id=\"text\">\r\n            Unless stated otherwise by your Dungeon Master every new character starts at a level 1. Input that number here.\r\n        </p>\r\n        <Form.Control\r\n          type=\"number\"\r\n          placeholder=\"Enter Level\"\r\n          name=\"level\"\r\n          value={formState.level}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CharForm;\r\n","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\diceComponent.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":4,"column":35,"nodeType":"86","messageId":"87","endLine":4,"endColumn":41},{"ruleId":"84","severity":1,"message":"88","line":10,"column":10,"nodeType":"86","messageId":"87","endLine":10,"endColumn":19},{"ruleId":"84","severity":1,"message":"89","line":11,"column":10,"nodeType":"86","messageId":"87","endLine":11,"endColumn":19},{"ruleId":"84","severity":1,"message":"90","line":11,"column":21,"nodeType":"86","messageId":"87","endLine":11,"endColumn":33},{"ruleId":"84","severity":1,"message":"91","line":2,"column":16,"nodeType":"86","messageId":"87","endLine":2,"endColumn":29},{"ruleId":"84","severity":1,"message":"92","line":2,"column":31,"nodeType":"86","messageId":"87","endLine":2,"endColumn":40},{"ruleId":"84","severity":1,"message":"93","line":17,"column":11,"nodeType":"86","messageId":"87","endLine":17,"endColumn":18},{"ruleId":"84","severity":1,"message":"94","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":21},{"ruleId":"84","severity":1,"message":"95","line":32,"column":15,"nodeType":"86","messageId":"87","endLine":32,"endColumn":19},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'validated' is assigned a value but never used.","'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","'loading' is assigned a value but never used.","'DiceComponent' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]

