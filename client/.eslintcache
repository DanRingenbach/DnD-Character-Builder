[{"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\index.js":"1","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\App.js":"2","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Login.js":"3","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Signup.js":"4","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Home.js":"5","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\Header\\index.js":"6","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\mutations.js":"7","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\auth.js":"8","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\queries.js":"9","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharacterList\\Characters.js":"10"},{"size":188,"mtime":1628346972348,"results":"11","hashOfConfig":"12"},{"size":2088,"mtime":1628718302224,"results":"13","hashOfConfig":"12"},{"size":2896,"mtime":1628717433349,"results":"14","hashOfConfig":"12"},{"size":2938,"mtime":1628551575670,"results":"15","hashOfConfig":"12"},{"size":889,"mtime":1628622622202,"results":"16","hashOfConfig":"12"},{"size":1352,"mtime":1628551575648,"results":"17","hashOfConfig":"12"},{"size":1234,"mtime":1628721267685,"results":"18","hashOfConfig":"12"},{"size":1071,"mtime":1628705422468,"results":"19","hashOfConfig":"12"},{"size":709,"mtime":1628622547251,"results":"20","hashOfConfig":"12"},{"size":544,"mtime":1628617654869,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1b62p5t",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\index.js",[],["45","46"],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\App.js",["47"],"import React from 'react';\r\nimport { setContext } from '@apollo/client/link/context'\r\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import Home from './pages/Home';\r\n// import Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n  });\r\n  \r\n  // Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n    // get the authentication token from local storage if it exists\r\n    const token = localStorage.getItem('id_token');\r\n    // return the headers to the context so httpLink can read them\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : '',\r\n      },\r\n    };\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n    uri:\"/graphql\"\r\n  });\r\n\r\n  function App() {\r\n      return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                      <Route exact path=\"/\">\r\n                        <Home />\r\n                      </Route>\r\n                      <Route exact path=\"/login\">\r\n                        <Login />\r\n                      </Route>\r\n                      <Route exact path=\"/signup\">\r\n                        <Signup />\r\n                      </Route>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n      )\r\n  }\r\n\r\n  export default App;","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Login.js",["48","49","50"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst Login = () => {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n  console.log(data);\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n      console.log(data.login.token);\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{\" \"}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Signup.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Home.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\mutations.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\auth.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\queries.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharacterList\\Characters.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":4,"column":35,"nodeType":"57","messageId":"58","endLine":4,"endColumn":41},{"ruleId":"55","severity":1,"message":"59","line":10,"column":10,"nodeType":"57","messageId":"58","endLine":10,"endColumn":19},{"ruleId":"55","severity":1,"message":"60","line":11,"column":10,"nodeType":"57","messageId":"58","endLine":11,"endColumn":19},{"ruleId":"55","severity":1,"message":"61","line":11,"column":21,"nodeType":"57","messageId":"58","endLine":11,"endColumn":33},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'validated' is assigned a value but never used.","'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
