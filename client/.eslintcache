[{"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\index.js":"1","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\App.js":"2","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Signup.js":"3","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Login.js":"4","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Home.js":"5","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Profile.js":"6","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\diceComponent.js":"7","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\Header\\index.js":"8","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\auth.js":"9","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharacterList\\Characters.js":"10","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\queries.js":"11","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\mutations.js":"12","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\CreateChar.js":"13","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharForm.js":"14"},{"size":188,"mtime":1628346972348,"results":"15","hashOfConfig":"16"},{"size":2574,"mtime":1628959028361,"results":"17","hashOfConfig":"16"},{"size":2989,"mtime":1628730690572,"results":"18","hashOfConfig":"16"},{"size":2816,"mtime":1628730690567,"results":"19","hashOfConfig":"16"},{"size":654,"mtime":1628730690565,"results":"20","hashOfConfig":"16"},{"size":1429,"mtime":1628784201772,"results":"21","hashOfConfig":"16"},{"size":869,"mtime":1628957387186,"results":"22","hashOfConfig":"16"},{"size":1735,"mtime":1628956922012,"results":"23","hashOfConfig":"16"},{"size":1071,"mtime":1628705422468,"results":"24","hashOfConfig":"16"},{"size":1386,"mtime":1628784201767,"results":"25","hashOfConfig":"16"},{"size":709,"mtime":1628622547251,"results":"26","hashOfConfig":"16"},{"size":1455,"mtime":1628962764148,"results":"27","hashOfConfig":"16"},{"size":375,"mtime":1628959008402,"results":"28","hashOfConfig":"16"},{"size":5448,"mtime":1628958994550,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1b62p5t",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\index.js",[],["64","65"],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\App.js",["66"],"import React from 'react';\r\nimport { setContext } from '@apollo/client/link/context'\r\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import Home from './pages/Home';\r\n// import Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Profile from './pages/Profile';\r\nimport CreateChar from './pages/CreateChar';\r\nimport diceComponent from './components/diceComponent'\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n  });\r\n  \r\n  // Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n    // get the authentication token from local storage if it exists\r\n    const token = localStorage.getItem('id_token');\r\n    // return the headers to the context so httpLink can read them\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : '',\r\n      },\r\n    };\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n    uri:\"/graphql\"\r\n  });\r\n\r\n  function App() {\r\n      return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    <Header />\r\n                    <div style={{maxWidth: \"fit-content\", margin: \"0 auto\", minWidth: \"170px\"}}>\r\n                      <Route exact path=\"/\">\r\n                        <Home />\r\n                      </Route>\r\n                      <Route exact path=\"/login\">\r\n                        <Login />\r\n                      </Route>\r\n                      <Route exact path=\"/signup\">\r\n                        <Signup />\r\n                      </Route>\r\n                      <Route exact path=\"/profile\">\r\n                        <Profile />\r\n                      </Route>\r\n                    </div>\r\n                      <Route exact path=\"/createChar\">\r\n                        <CreateChar />\r\n                        <diceComponent />\r\n                      </Route>\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n      )\r\n  }\r\n\r\n  export default App;","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Signup.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Login.js",["67","68","69"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst Login = () => {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n  console.log(data);\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n      console.log(data.login.token);\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n        <div className=\"card-body\">\r\n          {data ? (\r\n            <p>\r\n              Success! You may now head{' '}\r\n              <Link to=\"/\">back to the homepage.</Link>\r\n            </p>\r\n          ) : (\r\n            <form onSubmit={handleFormSubmit}>\r\n              <input style={{marginRight: \"10px\"}}\r\n                className=\"form-input\"\r\n                placeholder=\"Your email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n              />\r\n              <input style={{marginRight: \"10px\"}}\r\n                className=\"form-input\"\r\n                placeholder=\"******\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n              <button\r\n                className=\"btn btn-block btn-primary\"\r\n                style={{ cursor: 'pointer' }}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"my-3 p-3 bg-danger text-white\">\r\n              {error.message}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Home.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\Profile.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\diceComponent.js",["70","71","72","73","74","75","76","77","78"],"import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  Col,\r\n  Row,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { DiceRoller, exportFormats } from \"rpg-dice-roller\";\r\n\r\nconst roller = new DiceRoller();\r\n\r\nconst diceComponent = () => {\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const rolls = roller.roll(\r\n      \"4d6dl1\",\r\n      \"4d6dl1\",\r\n      \"4d6dl1\",\r\n      \"4d6dl1\",\r\n      \"4d6dl1\",\r\n      \"4d6dl1\"\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={handleFormSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"diceRoll\">\r\n          <Form.Label>Roll Dice!</Form.Label>\r\n          <p>{roller.output}</p>\r\n        </Form.Group>\r\n        <button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </Form>\r\n    );\r\n  };\r\n};\r\n\r\nexport default diceComponent\r\n","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\auth.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharacterList\\Characters.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\queries.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\utils\\mutations.js",[],"C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\pages\\CreateChar.js",["79","80","81"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport CharForm from \"../components/CharForm\";\r\nimport diceComponent from \"../components/diceComponent\";\r\n\r\nconst CreateChar = () => {\r\n  return (\r\n    <>\r\n      <CharForm />\r\n      <diceComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateChar;\r\n","C:\\Users\\danri\\Repos\\DnD-Character-Builder\\client\\src\\components\\CharForm.js",["82","83","84","85","86","87","88","89"],"import React, { useState } from 'react';\r\nimport { Card, ListGroupItem, ListGroup, Col, Row, Form } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_CHAR } from '../utils/mutations';\r\n\r\n\r\nconst CharForm = () => {\r\n    const [formState, setFormState] = useState({\r\n        name: '',\r\n        race: '',\r\n        class: '',\r\n        background: '',\r\n        stats: {\r\n            strength: '',\r\n            dexterity: '',\r\n            constitution: '',\r\n            intelligence: '',\r\n            wisdom: '',\r\n            charisma: '',\r\n        },\r\n        alignment: '',\r\n        weapons: ''\r\n    });\r\n\r\n    const [addChar, { error }] = useMutation(ADD_CHAR);\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // On form submit, perform mutation and pass in form data object as arguments\r\n        // It is important that the object fields are match the defined parameters in `ADD_CHAR` mutation\r\n        try {\r\n            const { data } = addChar({\r\n                variables: { ...formState },\r\n            });\r\n\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleFormSubmit} id=\"charForm\">\r\n            <Form.Group className=\"mb-3\" controlId=\"charName\">\r\n                <Form.Label>Enter Name</Form.Label>\r\n                <Form.Control\r\n                    type=\"input\"\r\n                    placeholder=\"Enter Name\"\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charRace\">\r\n                <Form.Label>Enter Race</Form.Label>\r\n                <Form.Control\r\n                    type=\"input\"\r\n                    placeholder=\"Enter Race\"\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charClass\">\r\n                <Form.Label>Enter Class</Form.Label>\r\n                <Form.Control\r\n                    type=\"input\"\r\n                    placeholder=\"Enter Class\"\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charAbilities\" value=\"stats\">\r\n                <Form.Label>Ability Scores</Form.Label>\r\n                <p>(orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum)</p>\r\n                <Form.Control\r\n                    type=\"input\"\r\n                    placeholder=\"Strength\"\r\n                />\r\n                <Form.Control\r\n                    type=\"input\"\r\n                    placeholder=\"Dexterity\"\r\n                />\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Constitution\" \r\n                />\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Intelligence\" \r\n                />\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Wisdom\" \r\n\r\n                />\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Charisma\" \r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charBackground\">\r\n                <Form.Label>Enter Character Background</Form.Label>\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Enter Background\" \r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charAlignment\">\r\n                <Form.Label>Enter Alignment</Form.Label>\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Enter Alignment\" \r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charItems\">\r\n                <Form.Label>Enter Items</Form.Label>\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Enter Items\" \r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charWeapons\">\r\n                <Form.Label>Enter Weapons</Form.Label>\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Enter Weapons\" \r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charHP\">\r\n                <Form.Label>Enter HitPoints</Form.Label>\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Enter HP\" \r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"charLevel\">\r\n                <Form.Label>Enter Level</Form.Label>\r\n                <Form.Control \r\n                    type=\"input\" \r\n                    placeholder=\"Enter Level\" \r\n                />\r\n            </Form.Group>\r\n\r\n            <button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </button>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CharForm;",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":35,"nodeType":"96","messageId":"97","endLine":4,"endColumn":41},{"ruleId":"94","severity":1,"message":"98","line":10,"column":10,"nodeType":"96","messageId":"97","endLine":10,"endColumn":19},{"ruleId":"94","severity":1,"message":"99","line":11,"column":10,"nodeType":"96","messageId":"97","endLine":11,"endColumn":19},{"ruleId":"94","severity":1,"message":"100","line":11,"column":21,"nodeType":"96","messageId":"97","endLine":11,"endColumn":33},{"ruleId":"94","severity":1,"message":"101","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"102","line":3,"column":3,"nodeType":"96","messageId":"97","endLine":3,"endColumn":7},{"ruleId":"94","severity":1,"message":"103","line":4,"column":3,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"94","severity":1,"message":"104","line":5,"column":3,"nodeType":"96","messageId":"97","endLine":5,"endColumn":12},{"ruleId":"94","severity":1,"message":"105","line":6,"column":3,"nodeType":"96","messageId":"97","endLine":6,"endColumn":6},{"ruleId":"94","severity":1,"message":"106","line":7,"column":3,"nodeType":"96","messageId":"97","endLine":7,"endColumn":6},{"ruleId":"94","severity":1,"message":"107","line":10,"column":22,"nodeType":"96","messageId":"97","endLine":10,"endColumn":35},{"ruleId":"94","severity":1,"message":"108","line":15,"column":9,"nodeType":"96","messageId":"97","endLine":15,"endColumn":25},{"ruleId":"94","severity":1,"message":"109","line":18,"column":11,"nodeType":"96","messageId":"97","endLine":18,"endColumn":16},{"ruleId":"94","severity":1,"message":"101","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"110","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"111","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"102","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"103","line":2,"column":16,"nodeType":"96","messageId":"97","endLine":2,"endColumn":29},{"ruleId":"94","severity":1,"message":"104","line":2,"column":31,"nodeType":"96","messageId":"97","endLine":2,"endColumn":40},{"ruleId":"94","severity":1,"message":"105","line":2,"column":42,"nodeType":"96","messageId":"97","endLine":2,"endColumn":45},{"ruleId":"94","severity":1,"message":"106","line":2,"column":47,"nodeType":"96","messageId":"97","endLine":2,"endColumn":50},{"ruleId":"94","severity":1,"message":"112","line":8,"column":23,"nodeType":"96","messageId":"97","endLine":8,"endColumn":35},{"ruleId":"94","severity":1,"message":"113","line":25,"column":23,"nodeType":"96","messageId":"97","endLine":25,"endColumn":28},{"ruleId":"94","severity":1,"message":"114","line":33,"column":21,"nodeType":"96","messageId":"97","endLine":33,"endColumn":25},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'validated' is assigned a value but never used.","'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'exportFormats' is defined but never used.","'handleFormSubmit' is assigned a value but never used.","'rolls' is assigned a value but never used.","'Link' is defined but never used.","'Form' is defined but never used.","'setFormState' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]